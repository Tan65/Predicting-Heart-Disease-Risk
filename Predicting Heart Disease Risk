import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.preprocessing import LabelEncoder

# Step 1: Load the Heart Disease dataset (UCI Heart Disease dataset)
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/heart-disease.data"
columns = ['Age', 'Sex', 'ChestPain', 'RestBP', 'Chol', 'Fbs', 'RestECG', 'MaxHR', 'ExerciseAngina', 'Oldpeak', 'Slope', 'Ca', 'Thal', 'Diagnosis']
data = pd.read_csv(url, names=columns)

# Step 2: Preprocessing
# Encode categorical columns
le = LabelEncoder()
data['Sex'] = le.fit_transform(data['Sex'])
data['ChestPain'] = le.fit_transform(data['ChestPain'])
data['Fbs'] = le.fit_transform(data['Fbs'])
data['RestECG'] = le.fit_transform(data['RestECG'])
data['ExerciseAngina'] = le.fit_transform(data['ExerciseAngina'])
data['Slope'] = le.fit_transform(data['Slope'])
data['Ca'] = le.fit_transform(data['Ca'])
data['Thal'] = le.fit_transform(data['Thal'])

# Features and Labels
X = data.drop('Diagnosis', axis=1)
y = data['Diagnosis']

# Step 3: Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 4: Train a Random Forest classifier
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 5: Predictions and Evaluation
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
